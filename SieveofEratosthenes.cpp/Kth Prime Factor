/*
Given two numbers n and k, find the kth prime factor of n. 

Example 1:

Input: n = 225, k = 2
Output: 3
Explaination: The prime factors 3, 3, 5 
and 5. So 3 is the 2nd one.

Example 2:

Input: n = 81, k = 5
Output: -1
Explaination: The 4 prime factors are 
3, 3, 3, 3. So there is no 5th one.

Your Task:
You do not need to read input or print anything. Your task is to complete the function kthPrime() which takes the value n and k as input parameters and return the kth prime number. If k is greater than total number of primes then return -1.


Expected Time Complexity: O(n*log(log n))
Expected Auxiliary Space: O(n)


Constraints:
1 ≤ n ≤ 104
1 ≤ k ≤ 50

*/


// User function Template for C++

class Solution{
public:
    int kthPrime(int n, int k){
        vector<int> spf(n+1);
        
        for(int i=0; i<=n; i++){
            spf[i] = i;
        }
        
        for(int i=2; i<=n; i++){
            if(spf[i] == i){
                for(int j = i*i; j<=n; j=j+i){
                    if(spf[j] == j)
                        spf[j] = i;
                }
            }
        }
        
        int c = 1;
        while(n>1){
            int pf = spf[n];
            n /= pf;
            if(c == k) return pf;
            c++;
        }
        
        return -1;
    }
};
