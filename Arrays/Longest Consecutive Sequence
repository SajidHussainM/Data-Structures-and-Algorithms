Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.

Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9

 

Constraints:

0 <= nums.length <= 105
-109 <= nums[i] <= 109
 

From <https://leetcode.com/problems/longest-consecutive-sequence/>



/*We are using a set here to store all the elements

And in the next loop we are finding the smallest element of a particular

Sequence in the array till then we are skipping i.e.. If(!s.count(num-1)) we are

Not able to find an element smaller than that eg:  [100,4,200,1,3,2] we start the if

Loop at 100 and 1 where 99 and 0 are absent

From here we iterate to find next curent num and keep updating the Currstreak

Next we compare curr streak with max streak to find the maximum */

 
 
 
 
 int longestConsecutive(vector<int>& nums) {

        set<int> s;

       

        for(int n:nums){

            s.insert(n);

        }

       

        int longest=0;

      

        for(int num:nums){

            if(!s.count(num-1)){

                int currentNum= num;

                int currentStreak=1;

                while(s.count(currentNum+1)){

                    currentNum++;

                    currentStreak++;

                }

               

                longest= max(longest,currentStreak);

            }

        }

       

        return longest;

          

    }





